@model IEnumerable<PetFragrant_Test.ViewModels.ShoppingCartViewModel>
@{
    ViewData["Title"] = "購物車";
}



<form asp-action="Check" asp-controller="Orderlist" method="post">
    <!-- 上層商品 -->
    <div class="row bg-white shadow-sm mt-2 mb-2">
        <h2 class="fw-bold m-4"><center>購物車</center></h2>


        @if (Model.Count() == 0)
        {
            <h1 class="text-center">您的購物車是空的喔!</h1>
        }
        else
        {
            <div class="col-12">
                
                <input type="checkbox" id="select-all">
                <label class="text-secondary">全選</label>
                <!-- <hr> -->
            </div>
            @for (int i = 0; i < Model.Count(); i++)
            {
                var item = Model.ElementAt(i);
                <!-- product -->
                <div class="product col-12 d-flex flex-wrap align-items-center mt-1 mb-4">
                    <hr class="col-12">
                    <!-- 勾選 -->
                    <div class="col-1">
                       
                        <input type="checkbox" name="items[@i].check" onclick="handleCheckboxClick(this)" class="checkbox" />
                    </div>
                    <!-- 商品圖 -->
                    <div class="pic col-2">
                        <a asp-controller="Products" asp-action="ProductDetail" asp-route-id="@item.ShoppingCartData.ProdcutId">
                            <img src="~/images/@(item.ShoppingCartData.Prodcut.ProdcutId)/1.png" class="img-con-s">
                        </a>
                    </div>
                    <!-- 商品標題 -->
                    <div class="pro-title col-3">
                        <input type="hidden" value="@item.ShoppingCartData.ProdcutId" name="items[@i].ProductId" />
                        <h4>@item.ShoppingCartData.Prodcut.ProductName</h4>
                        <div class="d-flex align-content-center">
                            @if (item.ProductData.SpecData.Count() > 0)
                            {
                                <p class="text-secondary">規格:</p>
                                <input type="text" value="@item.ShoppingCartData.Spec.SpecId" name="items[@i].oldspecID" hidden />
                                <select name="items[@i].specID" >
                                    <option value="@item.ShoppingCartData.Spec.SpecId" selected>@item.ShoppingCartData.Spec.SpecName</option>
                                    @foreach (var sp in item.ProductData.SpecData)
                                    {
                                        if (sp.SpecName != item.ShoppingCartData.Spec.SpecName)
                                        {
                                            <option value="@sp.SpecId">@sp.SpecName</option>
                                        }
                                    }
                                </select>
                            }
                            else
                            {
                                <input type="text" value="-1" name="items[@i].oldspecID" hidden />
                                <select hidden name="items[@i].specID">
                                    <option value="-1"></option>
                                </select>
                            }
                        </div>
                    </div>
                    <!-- 顯示目前價錢 -->
                    <div class="col-1">
                        <p class="text-secondary">商品單價</p>
                        <p class="price">NT @string.Format("{0:N0}", Math.Round(item.ShoppingCartData.Prodcut.Price*(decimal)0.9))</p>
                        <input type="hidden" value="@item.ShoppingCartData.Prodcut.Price" name="items[@i].Price" />
                    </div>
                    <!-- 選擇數量 -->
                    <div class="col-2">
                        <p style="color: #6f5f5f;">數量:</p>
                        <div class="d-flex mb-2">
                            <span><input type="button" class="sub" value="-" /></span>
                            <input type="text" value="@item.ShoppingCartData.Quantity" style="width: 40px;" name="items[@i].quantity" class="quantity" />
                            <span><input type="button" class="add" value="+" /></span>
                        </div>
                    </div>
                    <!-- 顯示目前價錢 -->
                    <div class="price col-1">
                        <p class="text-secondary">商品小記</p>
                        <p class="subtotal">NT @string.Format("{0:N0}", Math.Round( item.ShoppingCartData.Quantity * (item.ShoppingCartData.Prodcut.Price *(decimal)0.9)))</p>
                        <input type="hidden" value="@Math.Round(item.ShoppingCartData.Prodcut.Price * item.ShoppingCartData.Quantity)" name="items[@i].Subtotal" />
                    </div>
                    <button type="button" class="col-1 btn btn-danger delete" id="@item.ShoppingCartData.ProdcutId">
                        移除
                    </button>
                </div>
            }


        }



    </div>


    <!-- 折價券 -->
    <div class="row mt-4">
        <div class="discount">
            <button type="button" class="btn btn-secondary btn-lg" data-bs-toggle="modal" data-bs-target="#couponModal">
                折價券
            </button>

        </div>
    </div>

    <!-- 小記 -->
    <div class="row mt-4 bg-white p-4">
        <div class="note col-8">
            <div class="coupon-result d-flex">
                <h3 class="me-4">折價券</h3>
                <h4>-</h4>
            </div>
            <div class="shopping d-flex">
                <h3 class="me-4">商品小記</h3>
                <h4 class="total total-price">NT 0</h4>
            </div>
        </div>
        <div class="shopping-total col-4 d-flex align-items-end">
            <h2>總價</h2>
            <h3 class="total-price">NT 0</h3>

            <button type="submit" class="btn btn-danger btn-lg ms-4" id="checkout-btn">
                結帳
            </button>
        </div>
    </div>

    <!-- Coupon Modal -->
    <div class="modal fade" id="couponModal" tabindex="-1" aria-labelledby="couponModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title d-flex align-content-center" id="coupon">折價券</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="coupon d-flex">
                        <input type="radio" name="couponID" value="">
                        <input type="hidden" name="couponName" value="">
                        <div class="coupon-style w-100  ms-2">
                            <h4 class="d-flex align-items-center">不使用</h4>
                        </div>
                    </div>
                    <hr />
                    @foreach(var c in ViewBag.coupon)
                    {
                        
                        <div class="coupon d-flex">
                            <input type="radio" name="couponID" value="@c.ID">
                            <input type="hidden" name="couponName" value="@c.Name">
                            <div class="coupon-style w-100  ms-2">
                                <h4 class="d-flex align-items-center">@c.Name</h4>
                                <p class="text-secondary">到期日: @c.Period</p>

                            </div>
                        </div>
                        <hr />
                    }

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
                    @*<button type="button" class="btn btn-danger">儲存</button>*@
                </div>
            </div>
        </div>
    </div>

</form>


@section endJS{
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        var coupons = @Html.Raw(Json.Serialize(ViewBag.coupon));
            // 計算商品小計的函式
            function calculateSubtotal() {
                var product = $(this).closest('.product');
                var quantity = parseInt(product.find('.quantity').val());
                var priceText = product.find('.price').text().replace('NT ', '').replace(/,/g, '');
                var price = parseFloat(priceText);
                var subtotal = quantity * price;
                var formattedSubtotal = subtotal.toLocaleString('en-US', { maximumFractionDigits: 0 });
                product.find('.subtotal').text('NT ' + formattedSubtotal);

                updateTotalPrice(); // 更新商品總價
            }

            // 更新商品總價的函式
            function updateTotalPrice() {
                var total = 0;
                $('.product').each(function () {
                    var checkbox = $(this).find('.checkbox');
                    var subtotalText = $(this).find('.subtotal').text().replace('NT ', '').replace(/,/g, '');
                    var subtotal = parseFloat(subtotalText);

                    if (checkbox.prop('checked')) {
                        total += subtotal;
                    }
                });
                var formattedTotal = total.toLocaleString('en-US', { maximumFractionDigits: 0 });
                $('.total-price').text('NT ' + formattedTotal);
            }

            // 數量變更的事件處理器
            $('.quantity').on('change', calculateSubtotal);

            allcheck();

            function allcheck(){
                // 計算是否有被check
                var check = document.querySelectorAll("input[type='checkbox'][name^='items']");
                var allChecked = false;

                check.forEach(element => {
                    
                   // console.log(element.checked);
                    if (element.checked) {
                        allChecked = true;
                        
                    }
                });
                // 當 allChecked 為 false 時，禁用按鈕
                if (allChecked === false) {
                    $('#checkout-btn').prop('disabled', true);
                } else {
                    $('#checkout-btn').prop('disabled', false);
                }
            }


            // 增加和減少按鈕的事件處理器
            $('.sub').on('click', function () {
                var quantityInput = $(this).closest('.product').find('.quantity');
                var quantity = parseInt(quantityInput.val());
                if (quantity > 1) {
                    quantityInput.val(quantity - 1);
                    calculateSubtotal.call(this); // 計算更新後的小計
                }
            });

            $('.add').on('click', function () {
                var quantityInput = $(this).closest('.product').find('.quantity');
                var quantity = parseInt(quantityInput.val());
                quantityInput.val(quantity + 1);
                calculateSubtotal.call(this); // 計算更新後的小計
            });

        // coupon
        $('input[name="couponID"]').on('change', function () {
            var selectedCoupon = $(this).siblings('input[name="couponName"]').val();
            $('.coupon-result h4').text(selectedCoupon);
            console.log(selectedCoupon);
            updateTotalPrice();
            checkMinimumAmount(); // 檢查折價券最低金額
        });

         // 檢查折價券最低金額
        function checkMinimumAmount() {
            var couponID = $('input[name="couponID"]:checked').val();
            var selectedCoupon = coupons.find(c => c.id == couponID);
            var totalText = $('.total-price').text().replace('NT ', '').replace(/,/g, '');
            var total = parseFloat(totalText);
            console.log(selectedCoupon)
            if (selectedCoupon && total < selectedCoupon.minimumAmount) {
                // 商品總價小於折價券最低金額，禁用結帳按鈕
                $('#checkout-btn').prop('disabled', true);

                // 顯示提示訊息
                Swal.fire({
                    title: '商品總價未達到折價券最低金額！',
                    text: `您需要消費 NT ${selectedCoupon.minimumAmount} 或以上才能使用此折價券。`,
                    icon: 'warning',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: '確認'
                });
            } else {
                // 商品總價達到折價券最低金額，啟用結帳按鈕
                $('#checkout-btn').prop('disabled', false);
            }
        }

        // 處理勾選框點擊事件
        function handleCheckboxClick(checkbox) {
            checkbox.value = checkbox.checked ? 'true' : 'false';
            //console.log(checkbox.checked);
            allcheck();
            updateTotalPrice(); // 更新商品總價

        }

        // 全選商品
        let selectAll = document.getElementById("select-all");

        selectAll.addEventListener("click", function () {
            var check = document.querySelectorAll("input[type='checkbox'][name^='items']");

            if (this.checked == true) {
                check.forEach(element => {
                    element.checked = true;
                    element.setAttribute('value', 'true');
                });
            } else {
                check.forEach(element => {
                    element.checked = false;
                    element.setAttribute('value', 'false');
                });
            }
            allcheck();
            updateTotalPrice(); // 更新商品總價
        });

        // 刪除
        $(document).ready(function () {
            $('.delete').click(function () {
                var id = $(this).attr('id');
                $.ajax({
                    url: '@Url.Action("RemoveProduct", "User")',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        // 在成功回調函式中處理伺服器的回應
                        Swal.fire({
                            title: '刪除成功！',
                            showConfirmButton: false,
                            timer: 1000,
                            onOpen: function () {
                                Swal.showLoading();
                            }
                        });

                        setTimeout(function () {
                            Swal.close();
                            location.reload();
                        }, 1000);
                    },
                    error: function (xhr, status, error) {
                        // 在錯誤回調函數中處理錯誤情況
                        alert('刪除失敗');
                    }
                });
            });
        });


    </script>
}